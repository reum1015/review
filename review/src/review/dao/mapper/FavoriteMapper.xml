<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 이 파일의 경로를 config.xml에 명시해야 한다. -->

<!-- Member 테이블에 대한 CRUD 기능을 구현하기 위한 Mapper -->
<mapper namespace="FavoriteMapper">
	
	<!-- Beans 클래스의 객체이름(id)과 클래스 이름(type)를 명시한다. -->
	<resultMap id="favorite" type="review.model.Favorite" >
	<!-- 빈즈의 멤버 변수(property) 이름과 대상테이블의 컬럼(column)을 연결한다-->
		<result property="id" column="id"/>
		<result property="member_id" column="member_id"/>
		<result property="article_id" column="article_id"/>
		<result property="reg_date" column="reg_date"/>
		<result property="imagePath" column="image_path"/>
		<result property="title" column="title"/>
		<result property="content" column="content"/>
		<result property="category" column="category"/>
		<result property="total_like" column="total_like"/>
	</resultMap>
	
	<!-- 관심등록 한 작품인지 아닌지 확인 -->
	<select id="selectCountFavoriteArticleById"  parameterType="review.model.Favorite" resultType="int">
	SELECT count(id) FROM favorite WHERE member_id=#{member_id} AND article_id=#{article_id}
	</select>
	
	<!-- 관심등록 추가 -->
	<insert id="insertAddFavorite" parameterType="review.model.Favorite" useGeneratedKeys="true" keyProperty="id">
	INSERT INTO favorite (
	 member_id, article_id, reg_date
	)	VALUES (
	 #{member_id}, #{article_id}, now()
	 )
	</insert> 
	
	
	<delete id="deleteRemoveFavorite" parameterType="review.model.Favorite">
	 DELETE FROM favorite WHERE member_id=#{member_id} AND article_id=#{article_id}	
	</delete>
	
		
		<!-- 관심작품 목록을 조회한다. -->
	<select id="selectFavoriteList" parameterType="review.model.Favorite" resultMap="favorite">
       	SELECT DISTINCT a.id, a.category, m.nick_name, a.title, a.content, a.member_id, DATE_FORMAT(a.reg_date, '%Y-%m-%d') as reg_date, a.like_count, total_like,
		(SELECT concat(file_dir, '/', file_name) FROM imageFile
		 WHERE article_id=a.id 
		 AND 
		 content_type LIKE ('image/%') 		
			ORDER BY id ASC LIMIT 0, 1
			) 	AS imagePath		 
		FROM   article as a
         INNER JOIN member as m ON a.member_id = m.id
         INNER JOIN favorite as f ON f.article_id = a.id 
         WHERE               		
		replace(category,' ','') like concat('%', #{category}, '%')
		OR replace(title ,' ','') like concat('%', #{title}, '%')
		OR replace(content ,' ','') like concat('%', #{content }, '%')					       
        ORDER BY a.like_count DESC
       LIMIT #{limit_start}, #{list_count}            
	</select>		
	
	
	<!-- 전체 관심작품 수를 조회한다. 페이지 구현 위해서 -->
	<select id="selectFavoriteCount" parameterType="review.model.Favorite" resultType="int">
	SELECT COUNT(f.id) 
	FROM  favorite as f       
         LEFT JOIN article as a ON  f.article_id =a.id 
	 WHERE			
		replace(category,' ','') like concat('%', #{category}, '%')
		OR replace(title ,' ','') like concat('%', #{title }, '%')
		OR replace(content ,' ','') like concat('%', #{content }, '%')	
	
	</select>
	
	<!-- 특정 게시글에 속한 모든 관심작품을 삭제한다. -->
	<delete id="deleteFavoriteAll" parameterType="review.model.Favorite">
	  DELETE FROM favorite WHERE article_id =#{article_id}
	</delete>
	

</mapper>