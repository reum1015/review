<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 이 파일의 경로를 config.xml에 명시해야 한다. -->

<!-- Member 테이블에 대한 CRUD 기능을 구현하기 위한 Mapper -->
<mapper namespace="BookMarkMapper">
	
	<!-- Beans 클래스의 객체이름(id)과 클래스 이름(type)를 명시한다. -->
	<resultMap id="bookmark" type="review.model.BookMark" >
	<!-- 빈즈의 멤버 변수(property) 이름과 대상테이블의 컬럼(column)을 연결한다-->
		<result property="id" column="id"/>
		<result property="member_id" column="member_id"/>
		<result property="article_id" column="article_id"/>		
		<result property="imagePath" column="image_path"/>
		<result property="reg_date" column="reg_date"/>		
		
	</resultMap>
	
	<!-- 북마크 추가 -->
	<insert id="insertAddBookMark" parameterType="review.model.BookMark" useGeneratedKeys="true" keyProperty="id">
	INSERT INTO bookmark (
	   member_id, article_id, reg_date
	) VALUES (
	   #{member_id}, #{article_id}, now()
	   )
	</insert> 
	
	<!-- 북마크 등록 한 작품인지 아닌지 확인 -->
	<select id="selectCountBookMarkById"  parameterType="review.model.BookMark" resultType="int">
	SELECT count(id) FROM bookmark WHERE member_id=#{member_id} AND article_id=#{article_id}
	</select>
	
	<delete id="deleteRemoveBookMark" parameterType="review.model.BookMark">
         DELETE FROM bookmark WHERE member_id=#{member_id} AND article_id=#{article_id}
	</delete>
		
		<!-- 북마크 목록을 조회한다. -->
	<select id="selectBookMarkList" parameterType="review.model.BookMark" resultMap="bookmark">
     		SELECT a.id, a.category, m.nick_name, a.title, a.content, a.member_id, DATE_FORMAT(a.reg_date, '%Y-%m-%d') as reg_date, 
		(SELECT concat(file_dir, '/', file_name) FROM imageFile
		 WHERE article_id=a.id 
		 AND 
		 content_type LIKE ('image/%') 		
			ORDER BY id ASC LIMIT 0, 1
			) 	AS imagePath	
		FROM   article as a
        INNER JOIN member as m ON a.member_id = m.id
         INNER JOIN bookmark as b ON b.article_id = a.id        
         WHERE  b.member_id=#{member_id}
       	ORDER BY b.id DESC  
         LIMIT #{limit_start}, #{list_count}        
	</select>	
		
	<!-- 전체 게시물 수를 조회한다. 페이지 구현 위해서 -->
	<select id="selectBookMarkCount" parameterType="review.model.BookMark" resultType="int">
	SELECT COUNT(id) FROM bookmark WHERE member_id =#{member_id}	
	</select>
	
	<!-- 특정 게시글에 속한 모든 북마크를 삭제한다. -->
	<delete id="deleteBookMarkAll" parameterType="review.model.BookMark">
	  DELETE FROM bookmark WHERE article_id =#{article_id}
	</delete>
	
	<select id="selectbookmarkStateList" parameterType="review.model.BookMark" resultMap="bookmark">
		SELECT article_id FROM bookmark WHERE member_id=#{member_id}
	</select>


	
</mapper>